apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: dot-github-template
  title: dot-github
  description: Create and Manage GitHub repositories
spec:
  owner: vfarcic/crossplanme-gh
  type: service
  parameters:
    - title: Service Definition
      required:
        - name
      properties:
        name:
          type: string
        public:
          type: string # FIXME: boolean
          default: "true"
          pattern: '^(true|false)*$'
        registry:
          type: string
          default: ttl.sh
        app:
          type: object
          properties:
            language:
              type: string
              default: go
              enum: ["go", "js"]
            host:
              type: string
              default: my-repo.acme.com
            namespace:
              type: string
              default: a-team
        db:
          type: object
          properties:
            enabled:
              type: string # FIXME: boolean
              default: "true"
              pattern: '^(true|false)*$'
            provider:
              type: string
              default: aws
              enum: ["aws", "azure", "google"]
            namespace:
              type: string
              default: a-team # FIXME: array from Kubernetes
        repo:
          type: object
          properties:
            user:
              type: string
              default: vfarcic
        gitOps:
          type: object
          properties:
            enabled:
              type: string
              default: "true"
              pattern: '^(true|false)*$'
            user:
              type: string
              default: vfarcic
            repo:
              type: string
              default: crossplane-gh
  steps:
    - id: log-message
      name: Log Message
      action: debug:log
      input:
        message: 'Hello, ${{ parameters.gitOps.user }}/${{ parameters.gitOps.repo }}!'
    # FIXME: Remove
    - action: fetch:plain
      id: fetch-plain
      name: Fetch plain
      input:
        url: ./setup.sh
        targetPath: ./setup.sh-xxx
    - id: fetch-template
      action: fetch:template
      name: Generate manifest
      input:
        url: ./catalog-manifest-template.yaml
      #   values:
      #     name: ${{ parameters.name }}
    - id: create-pull-request
      action: publish:github:pull-request
      name: Create a pull request
      input:
        repoUrl: github.com?repo=${{ parameters.gitOps.repo }}&owner=${{ parameters.gitOps.user }}
        branchName: xxx
        title: App manifest # FIXME: Add app name
        description: This pull request creates or update the app manifest # FIXME: Add app name
